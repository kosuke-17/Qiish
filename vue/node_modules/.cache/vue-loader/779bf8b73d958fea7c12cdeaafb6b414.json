{"remainingRequest":"/Users/yukikawata/vue-workspace/quich/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yukikawata/vue-workspace/quich/src/components/ArticleList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/yukikawata/vue-workspace/quich/src/components/ArticleList.vue","mtime":1639961463564},{"path":"/Users/yukikawata/vue-workspace/quich/node_modules/cache-loader/dist/cjs.js","mtime":1639699529060},{"path":"/Users/yukikawata/vue-workspace/quich/node_modules/babel-loader/lib/index.js","mtime":1639699529393},{"path":"/Users/yukikawata/vue-workspace/quich/node_modules/ts-loader/index.js","mtime":1639699529423},{"path":"/Users/yukikawata/vue-workspace/quich/node_modules/cache-loader/dist/cjs.js","mtime":1639699529060},{"path":"/Users/yukikawata/vue-workspace/quich/node_modules/vue-loader/lib/index.js","mtime":1639699529466}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCB7IEFydGljbGUgfSBmcm9tICIuLi90eXBlcy9hcnRpY2xlIjsKCkBDb21wb25lbnQKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aWNsZUxpc3QgZXh0ZW5kcyBWdWUgewogIC8v6KiY5LqL5LiA6Kan44KS5qC857SN44GZ44KL6YWN5YiXCiAgcHJpdmF0ZSBhcnRpY2xlTGlzdCA9IEFycmF5PEFydGljbGU+KCk7CgogIC8qKgogICAqIFdlYkFQSeOBi+OCieiomOS6i+S4gOimp+OCkuWPluW+l+OBmeOCiy4KICAgKgogICAqIEByZW1hcmtzIOWFqOWVhuWTgeS4gOimp+OCkkFQSeOBi+OCieOCouOCr+OCt+ODp+ODs+OBp+WPluW+l+OAgeODn+ODpeODvOODhuODvOOCt+ODp+ODs+OBp+WVhuWTgeOCquODluOCuOOCp+OCr+ODiOWMluOBl+OBn+OCguOBruOCkuWVhuWTgeS4gOimp+mFjeWIl+OBq+agvOe0jQogICAqLwogIGFzeW5jIGNyZWF0ZWQoKTogUHJvbWlzZTx2b2lkPiB7CiAgICBhd2FpdCB0aGlzWyIkc3RvcmUiXS5kaXNwYXRjaCgiZ2V0QXJpdGNsZUxpc3QiKTsKCiAgICB0aGlzLmFydGljbGVMaXN0ID0gdGhpc1siJHN0b3JlIl0uZ2V0dGVycy5nZXRBbGxBcnRpY2xlczsKICB9CgogIC8qKgogICAq6KiY5LqL5LiA6Kan44KS5Y+W5b6XLgogICAqCiAgICogQHJlbWFya3Mg5ZWG5ZOB5qSc57Si44Gu44K144K444Kn44K544OI5qmf6IO944KS44GZ44KL44Gf44KB44Gr5YWo5Lu25Y+W5b6X44Oh44K944OD44OJ44KS5L2c5oiQCiAgICovCiAgZ2V0IGdldEFsbEFydGljbGUoKTogdm9pZCB7CiAgICByZXR1cm4gdGhpc1siJHN0b3JlIl0uZ2V0dGVycy5nZXRBbGxBcnRpY2xlczsKICB9Cn0K"},{"version":3,"sources":["ArticleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ArticleList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"bg-white border p-8 m-2 box-content rounded-lg shadow-md flex\">\n    <div>\n      <div class=\"font-sans text-xs\">@rakus111111が12月7日に投稿しました</div>\n      <div class=\"font-bold text-xl no-underline hover:underline\">\n        TailwindCSSのチートシートを公開します。\n      </div>\n      <div class=\"m-1\">\n        <span\n          class=\"m-1 py-1 px-1 bg-blue-500 text-white text-center font-sans text-xs shadow-md rounded-lg\"\n        >\n          フロントエンド\n        </span>\n        <span\n          class=\"m-1 py-1 px-1 bg-blue-500 text-white text-center font-sans text-xs shadow-md rounded-lg\"\n        >\n          CSS\n        </span>\n        <span\n          class=\"m-1 py-1 px-1 bg-blue-500 text-white text-center font-sans text-xs shadow-md rounded-lg\"\n        >\n          TailwindCSS\n        </span>\n        <span\n          class=\"m-1 py-1 px-1 bg-blue-500 text-white text-center font-sans text-xs shadow-md rounded-lg\"\n        >\n          初心者\n        </span>\n      </div>\n    </div>\n    <div class=\"bg-gray-100 box-content ml-8 h-30 w-1/5 p-8 text-center\">\n      NoImage\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Article } from \"../types/article\";\n\n@Component\nexport default class ArticleList extends Vue {\n  //記事一覧を格納する配列\n  private articleList = Array<Article>();\n\n  /**\n   * WebAPIから記事一覧を取得する.\n   *\n   * @remarks 全商品一覧をAPIからアクションで取得、ミューテーションで商品オブジェクト化したものを商品一覧配列に格納\n   */\n  async created(): Promise<void> {\n    await this[\"$store\"].dispatch(\"getAritcleList\");\n\n    this.articleList = this[\"$store\"].getters.getAllArticles;\n  }\n\n  /**\n   *記事一覧を取得.\n   *\n   * @remarks 商品検索のサジェスト機能をするために全件取得メソッドを作成\n   */\n  get getAllArticle(): void {\n    return this[\"$store\"].getters.getAllArticles;\n  }\n}\n</script>\n"]}]}